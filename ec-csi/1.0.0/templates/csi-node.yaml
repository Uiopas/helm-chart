---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ec-csi-nodeplugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: ec-csi-nodeplugin
  template:
    metadata:
      labels:
        app: ec-csi-nodeplugin
        role: ec-csi
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: ec-csi-node-sa
      hostNetwork: true
      containers:
        - name: node-driver-registrar
          image: "{{ .Values.images.nodeRegistrar.repository }}:{{ .Values.images.nodeRegistrar.tag }}"
          imagePullPolicy: "{{ .Values.images.nodeRegistrar.pullPolicy }}"
          args:
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.edgecenter.org/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration

        - name: liveness-probe
          image: "{{ .Values.images.nodeLivenessProbe.repository }}:{{ .Values.images.nodeLivenessProbe.tag }}"
          imagePullPolicy: "{{ .Values.images.nodeLivenessProbe.pullPolicy }}"
          args:
            - --csi-address=/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi

        - name: ec-csi-plugin
          image: "{{ .Values.images.ecCsiPlugin.repository }}:{{ .Values.images.ecCsiPlugin.tag }}"
          imagePullPolicy: "{{ .Values.images.ecCsiPlugin.pullPolicy }}"
          env:
            - name: CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  name: ec-csi-plugin-config
                  key: CLUSTER_ID
          args:
            - csi-plugin
            - --endpoint=unix://csi/csi.sock
            - --config=/etc/config/config.yaml
            - --cluster=$(CLUSTER_ID)
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          securityContext:
            privileged: true
            capabilities:
              add: [ "SYS_ADMIN" ]
            allowPrivilegeEscalation: true
          # The probe
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: pods-probe-dir
              mountPath: /dev
              mountPropagation: "HostToContainer"
            - mountPath: /etc/config
              name: config
              readOnly: true
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.edgecenter.org
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: pods-probe-dir
          hostPath:
            path: /dev
            type: Directory
        - name: config
          secret:
            secretName: ec-csi-plugin-config
